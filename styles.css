/***
    The new CSS reset - version 1.11.2 (last updated 15.11.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */

*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Fix mobile Safari increase font-size on landscape mode */

html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Reapply the pointer cursor for anchor tags */

a,
button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */

ol,
ul,
menu,
summary {
    list-style: none;
}

/* For images to not be able to exceed their container */

img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */

table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */

input,
textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */

textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */

meter {
    -webkit-appearance: revert;
    -moz-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */

:where(pre) {
    all: revert;
    box-sizing: border-box;
}

/* reset default text opacity of input placeholder */

::-moz-placeholder {
    color: unset;
}

::placeholder {
    color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */

:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/

:where([contenteditable]:not([contenteditable=false])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */

:where([draggable=true]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */

:where(dialog:modal) {
    all: revert;
    box-sizing: border-box;
}

/* Remove details summary webkit styles */

::-webkit-details-marker {
    display: none;
}

@font-face {
    font-family: clurbantik;
    font-display: swap;
    src: url("../fonts/clurbantik.woff2") format("woff2"), url("../fonts/clurbantik.woff") format("woff");
    font-weight: 400;
    font-style: normal;
}

html {
    font-family: clurbantik;
    font-size: clamp(20px, 0.786rem + 1.429vw, 40px);
    font-weight: bold;
    background: #01012B;
    color: #ff2a6d;
}

.container {
    padding: 0px 92px;
}

.button {
    border: 2px solid #ff2a6d;
    box-shadow: 0px 0px 40px -7px rgb(255, 42, 109);
    transition-timing-function: ease-in-out;
    transition-property: color, background-color;
    transition-duration: 0.3s;
}

.button:hover {
    color: #d1f7ff;
    background-color: #ff2a6d;
}

input[type=text],
input[type=tel],
input[type=number],
input[type=password],
textarea {
    display: block;
    font-family: inherit;
    background-clip: padding-box;
    border: 2px solid #ff2a6d;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

textarea {
    max-width: 404px;
    border-radius: clamp(10px, 0.439rem + 0.571vw, 18px);
    min-height: 88px;
}

.account-tab {
    display: none;
}

.account-tab.active {
    display: block;
}

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
    input[type=checkbox],
    input[type=radio] {
        --active: #2D404E;
        --active-inner: #fff;
        --focus: 2px rgba(39, 94, 254, .3);
        --border: #2D404E;
        --border-hover: #2D404E;
        --background: transparency;
        --disabled: #F6F8FF;
        --disabled-inner: #E1E6F9;
        -webkit-appearance: none;
        -moz-appearance: none;
        height: 21px;
        outline: none;
        display: inline-block;
        vertical-align: top;
        position: relative;
        margin: 0;
        cursor: pointer;
        border: 1px solid var(--bc, var(--border));
        background: var(--b, var(--background));
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }

    input[type=checkbox]:after,
    input[type=radio]:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        position: absolute;
    }

    input[type=checkbox]:checked,
    input[type=radio]:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
        border: 1px solid #fff;
    }

    input[type=checkbox]:disabled,
    input[type=radio]:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: 0.9;
    }

    input[type=checkbox]:disabled:checked,
    input[type=radio]:disabled:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
    }

    input[type=checkbox]:disabled + label,
    input[type=radio]:disabled + label {
        cursor: not-allowed;
    }

    input[type=checkbox]:hover:not(:checked):not(:disabled),
    input[type=radio]:hover:not(:checked):not(:disabled) {
        --bc: var(--border-hover);
    }

    input[type=checkbox]:focus,
    input[type=radio]:focus {
        box-shadow: 0 0 0 var(--focus);
    }

    input[type=checkbox]:not(.switch),
    input[type=radio]:not(.switch) {
        width: 21px;
    }

    input[type=checkbox]:not(.switch):after,
    input[type=radio]:not(.switch):after {
        opacity: var(--o, 0);
    }

    input[type=checkbox]:not(.switch):checked,
    input[type=radio]:not(.switch):checked {
        --o: 1;
    }

    input[type=checkbox] + label,
    input[type=radio] + label {
        line-height: 21px;
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: 7px;
    }

    input[type=checkbox]:not(.switch) {
        border-radius: 7px;
    }

    input[type=checkbox]:not(.switch):after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
    }

    input[type=checkbox]:not(.switch):checked {
        --r: 43deg;
    }

    input[type=checkbox].switch {
        width: 38px;
        border-radius: 11px;
    }

    input[type=checkbox].switch:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 15px;
        height: 15px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
    }

    input[type=checkbox].switch:checked {
        --ab: var(--active-inner);
        --x: 17px;
    }

    input[type=checkbox].switch:disabled:not(:checked):after {
        opacity: 0.6;
    }

    input[type=radio] {
        border-radius: 50%;
    }

    input[type=radio]:checked {
        --s: .5;
    }
}

.input-file {
    position: relative;
    display: inline-block;
}

.input-file-btn {
    position: relative;
    display: inline-block;
    cursor: pointer;
    outline: none;
    text-decoration: none;
    vertical-align: middle;
    color: rgb(255, 255, 255);
    text-align: center;
    border-radius: 4px;
    background-color: #05d9e8;
    line-height: 22px;
    height: 40px;
    padding: 10px 20px;
    box-sizing: border-box;
    border: none;
    margin: 0;
    transition: background-color 0.2s;
}

.input-file-text {
    padding: 0 10px;
    line-height: 40px;
    display: inline-block;
}

.input-file input[type=file] {
    position: absolute;
    z-index: -1;
    opacity: 0;
    display: block;
    width: 0;
    height: 0;
}

/* Focus */

.input-file input[type=file]:focus + .input-file-btn {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* Hover/active */

.input-file:hover .input-file-btn {
    background-color: #ff2a6d;
}

.input-file:active .input-file-btn {
    background-color: #ff2a6d;
}

/* Disabled */

.input-file input[type=file]:disabled + .input-file-btn {
    background-color: #eee;
}

.fixed-button {
    position: fixed;
    bottom: 115px;
    right: 0;
}

.main-menu__container {
    height: 100vh;
}

.main-menu__wrapper {
    display: flex;
    flex-direction: column;
    height: 100vh;
    align-items: center;
    justify-content: center;
}

.main-menu__content {
    display: flex;
    flex-direction: column;
    gap: 20px;
    align-items: center;
    justify-content: center;
}

.main-menu__button {
    width: 310px;
    padding: 5px 20px;
    text-align: center;
}

.main-menu__link {
    text-align: center;
}

.main-menu__title {
    margin-bottom: 40px;
    font-size: 100px;
    text-align: center;
}

.header__container {
    box-shadow: 0px 0px 40px -7px #05D9E8;
    margin-bottom: 60px;
}

.header__wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header-menu__wrapper {
    display: flex;
    gap: 10px;
}

.header-menu__link {
    padding: 0 20px;
    border: 2px solid #ff2a6d;
    box-shadow: 0px 0px 40px -7px rgb(255, 42, 109);
}

.character-update__tabs {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-bottom: 40px;
}

.character-update__tab {
    padding: 0 20px;
    transition-duration: 0.3s;
    transition-property: border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 1.3, 0.91, 0.05);
}

.character-update__tab.active {
    background-color: #005678;
    color: #d1f7ff;
    border-color: #d1f7ff;
    box-shadow: 0px 0px 40px -7px #d1f7ff;
}

.character-update__content {
    display: none;
}

.character-update__content.active {
    display: block;
}

.character-update__content.active.skills {
    position: relative;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 30px 20px;
}

.character-update__content.active.skills .wrap-buttons {
    position: fixed;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.character-update__content.active.general {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
}

.character-update__content.active.about .character-update__item,
.character-update__content.active.gear .character-update__item {
    width: 100%;
}

.character-update__content.active.about .character-update__row,
.character-update__content.active.gear .character-update__row {
    flex-direction: column;
    justify-content: start;
    align-items: start;
}

.character-update__content.active.about .character-update__text-area,
.character-update__content.active.gear .character-update__text-area {
    max-width: 500px;
}

.character-update__item {
    width: 400px;
}

.character-update__row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;
}

.character-update__row.role {
    display: flex;
    flex-direction: column;
    align-items: start;
}

.character-update__input {
    width: 80px;
}

.character-update__input_name {
    width: 100%;
}

.character-update__input.required {
    border-color: #E1E6F9;
}

.character-update__text-area {
    resize: both;
    width: 100%;
    min-height: 400px;
}

.character-update__accordion-title {
    color: #05d9e8;
}

.character-update__accordion-content {
    height: 0px;
    overflow: hidden;
}

.character-update__accordion-content.active {
    height: auto;
}

.account__tabs {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-bottom: 40px;
}

.account__tab {
    padding: 0 20px;
    transition-duration: 0.3s;
    transition-property: border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 1.3, 0.91, 0.05);
}

.account__tab.active {
    background-color: #005678;
    color: #d1f7ff;
    border-color: #d1f7ff;
    box-shadow: 0px 0px 40px -7px #d1f7ff;
}

.account__content {
    display: none;
}

.account__content.active {
    display: block;
}

.account-articles__wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: clamp(25px, 0.982rem + 1.786vw, 50px);
}

.account-articles__item {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: clamp(15px, 0.589rem + 1.071vw, 30px);
    border: #ff2a6d 2px solid;
    border-radius: 0px clamp(30px, 1.179rem + 2.143vw, 60px) 0px clamp(30px, 1.179rem + 2.143vw, 60px);
    box-shadow: 0px 0px 40px -7px rgb(255, 42, 109);
}

.account-characters__wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: clamp(25px, 0.982rem + 1.786vw, 50px);
}

.account-characters__item {
    display: flex;
    flex-direction: column;
    justify-content: end;
    gap: 10px;
    padding: clamp(15px, 0.589rem + 1.071vw, 30px);
    border: #ff2a6d 2px solid;
    border-radius: 0px clamp(30px, 1.179rem + 2.143vw, 60px) 0px clamp(30px, 1.179rem + 2.143vw, 60px);
    box-shadow: 0px 0px 40px -7px rgb(255, 42, 109);
}

.account-characters__image {
    max-width: 300px;
}

.account-characters__image img {
    -o-object-fit: cover;
    object-fit: cover;
}

.blog__wrapper {
    display: flex;
    gap: 50px;
    flex-direction: column;
}

.blog-article__wrapper {
    padding: 30px;
    border: 2px solid;
}

@media (max-width: 1400px) {
    .container {
        padding: 0px 40px;
    }

    .character-update__content.active.general {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 1200px) {
    .header__wrapper {
        flex-direction: column;
        gap: 20px;
        align-items: start;
        padding-bottom: 30px;
    }

    .character-update__content.active.skills {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 1000px) {
    .container {
        padding: 0px 20px;
    }

    .main-menu__title {
        font-size: 70px;
    }
}

@media (max-width: 900px) {
    .character-update__content.active.general {
        grid-template-columns: auto;
    }
}

@media (max-width: 600px) {
    .character-update__content.active.skills {
        grid-template-columns: auto;
    }
}

@media (max-width: 500px) {
    .header-menu__wrapper {
        flex-direction: column;
    }

    .character-update__item {
        width: 100%;
    }
}